<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ano" xml:space="preserve">
    <value>yes</value>
  </data>
  <data name="datumvytvorenia" xml:space="preserve">
    <value>datumvytvorenia</value>
  </data>
  <data name="detailmiestnosti" xml:space="preserve">
    <value>Room details</value>
  </data>
  <data name="detailpolozky" xml:space="preserve">
    <value>Item details</value>
  </data>
  <data name="detailpozicie" xml:space="preserve">
    <value>Position details</value>
  </data>
  <data name="detailtovaru" xml:space="preserve">
    <value>Goods details</value>
  </data>
  <data name="ean" xml:space="preserve">
    <value>EAN</value>
  </data>
  <data name="eansanepouziva" xml:space="preserve">
    <value>ean sa nepouziva</value>
  </data>
  <data name="emptytag" xml:space="preserve">
    <value>Emty TAG</value>
  </data>
  <data name="expiracia" xml:space="preserve">
    <value>expiracia</value>
  </data>
  <data name="expiraciadni" xml:space="preserve">
    <value>Expiracia ( dni )</value>
  </data>
  <data name="formatingtagoperationsucceessful" xml:space="preserve">
    <value>Formating TAG on successful</value>
  </data>
  <data name="hmotnost" xml:space="preserve">
    <value>Weight ( g )</value>
  </data>
  <data name="kategoria" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="manual" xml:space="preserve">
    <value>manual</value>
  </data>
  <data name="manualnyvyber" xml:space="preserve">
    <value>Manual pull item</value>
  </data>
  <data name="nazov" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="nfcisdissabled" xml:space="preserve">
    <value>NFC is disable</value>
  </data>
  <data name="nfcisnotavailable" xml:space="preserve">
    <value>NFC is not available</value>
  </data>
  <data name="notagfound" xml:space="preserve">
    <value>No TAG found</value>
  </data>
  <data name="novamiestnost" xml:space="preserve">
    <value>New room</value>
  </data>
  <data name="novapolozka" xml:space="preserve">
    <value>New item</value>
  </data>
  <data name="novapozicia" xml:space="preserve">
    <value>New position</value>
  </data>
  <data name="novytovar" xml:space="preserve">
    <value>New goods item</value>
  </data>
  <data name="popispoziciadetail" xml:space="preserve">
    <value>Description position detail</value>
  </data>
  <data name="popispozicialist" xml:space="preserve">
    <value>Position list</value>
  </data>
  <data name="popispoziciavytvorenie" xml:space="preserve">
    <value>Description position creation</value>
  </data>
  <data name="popistovardetail" xml:space="preserve">
    <value>Description goods detail</value>
  </data>
  <data name="popistovarvytvorenie" xml:space="preserve">
    <value>Description goods creation</value>
  </data>
  <data name="popistovarzoznam" xml:space="preserve">
    <value>Description goods list</value>
  </data>
  <data name="popisvyber" xml:space="preserve">
    <value>Description search</value>
  </data>
  <data name="popiszariadeniedetail" xml:space="preserve">
    <value>List device record detail</value>
  </data>
  <data name="popiszariadenievytvorenie" xml:space="preserve">
    <value>Create device record</value>
  </data>
  <data name="popiszariadeniezoznam" xml:space="preserve">
    <value>List device record</value>
  </data>
  <data name="poslednepouzite" xml:space="preserve">
    <value>last used</value>
  </data>
  <data name="poznamka" xml:space="preserve">
    <value>note</value>
  </data>
  <data name="prehlad" xml:space="preserve">
    <value>View</value>
  </data>
  <data name="recordcantbenull" xml:space="preserve">
    <value>Record can not by null</value>
  </data>
  <data name="suflik" xml:space="preserve">
    <value>Position</value>
  </data>
  <data name="tag" xml:space="preserve">
    <value>tag</value>
  </data>
  <data name="tagid" xml:space="preserve">
    <value>Tag ID</value>
  </data>
  <data name="taginfo" xml:space="preserve">
    <value>Tag info</value>
  </data>
  <data name="ulozit" xml:space="preserve">
    <value>save</value>
  </data>
  <data name="unsupportedtag" xml:space="preserve">
    <value />
  </data>
  <data name="userhascancelnfcsession" xml:space="preserve">
    <value />
  </data>
  <data name="uvodnastranka" xml:space="preserve">
    <value>Home page</value>
  </data>
  <data name="vlozenie" xml:space="preserve">
    <value>push</value>
  </data>
  <data name="vlozeniemanualne" xml:space="preserve">
    <value>Insert manually</value>
  </data>
  <data name="vlozeniepomocouean" xml:space="preserve">
    <value>Insert by ean</value>
  </data>
  <data name="vlozeniepomocoutagu" xml:space="preserve">
    <value>Insert by tag</value>
  </data>
  <data name="vyber" xml:space="preserve">
    <value>Pull</value>
  </data>
  <data name="vyberpomocouean" xml:space="preserve">
    <value>Search by ean</value>
  </data>
  <data name="vyberpomocoutagu" xml:space="preserve">
    <value>Search by tag</value>
  </data>
  <data name="writingtagisnotsupportedonthisdevice" xml:space="preserve">
    <value>Writing tag is not supported on this device</value>
  </data>
  <data name="writingtagoperationsuccessful" xml:space="preserve">
    <value>Writing tag operation successful</value>
  </data>
  <data name="zadajteexpiraciu" xml:space="preserve">
    <value>Enter  Date Of Expiration</value>
  </data>
  <data name="zadajtehmotnost" xml:space="preserve">
    <value>Enter weight</value>
  </data>
  <data name="zadajtenazov" xml:space="preserve">
    <value>Enter name</value>
  </data>
  <data name="zariadenie" xml:space="preserve">
    <value>device</value>
  </data>
  <data name="zmazat" xml:space="preserve">
    <value>delete</value>
  </data>
  <data name="zoznammiestnosti" xml:space="preserve">
    <value>Rooms list</value>
  </data>
  <data name="zoznampoloziek" xml:space="preserve">
    <value>Item list</value>
  </data>
  <data name="zoznampozicii" xml:space="preserve">
    <value>Orde rlist</value>
  </data>
  <data name="zrusit" xml:space="preserve">
    <value>cancel</value>
  </data>
</root>